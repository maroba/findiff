[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "findiff"
authors = [
    { name = "Matthias Baer" },
]
maintainers = [
    { name = "Matthias Baer", email = "matthias.r.baer@googlemail.com" },
]
description = "A Python package for finite difference derivatives in any number of dimensions."
readme = "README.md"
license = { text = "MIT" }
dependencies = [
    "numpy",
    "scipy",
    "sympy"
]
dynamic = ["version"]

requires-python = ">=3.8"
keywords = ["finite-differences", "numerical-derivatives", "scientific-computing"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Mathematics",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/maroba/findiff"
source = "https://github.com/maroba/findiff"
Issues = "https://github.com/maroba/findiff/issues"
tracker = "https://github.com/maroba/findiff/issues"

[tool.setuptools.packages.find]
include = ["findiff"]

[tool.setuptools.dynamic]
version = { attr = "findiff.__version__" }

[tool.pytest.ini_options]
addopts = [
    "--strict-markers"
]
testpaths = "tests"
markers = [
    "functional: Functional tests for stuff that the user would do",
    "one_dimensional: Tests in 1D",
    "periodic: Tests for periodic boundary conditions",
    "invalid_args: Tests for invalid argument handling",
    "default_args: Tests for default argument handling",
    "grid_spec: Marker to construct grid data by fixtures"
]

[tool.coverage]
run.source_pkgs = ["findiff", "tests"]
run.branch = true
run.parallel = true
report.exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@overload",
    "@unittest.skip",
]

[tool.tox]
requires = ["tox>=4.21"]
env_list = [
    "fmt", "lint",
    "3.13", "3.12", "3.11", "3.10", "3.9", "3.8",
]

[tool.tox.env_run_base]
wheel_build_env = ".pkg"
deps = [
    "pytest",
]
commands = [
    ["pytest"],
]

[tool.tox.env.fmt]
package = "skip"
deps = [
    "ruff",
]
commands = [
    ["ruff", "format", "--check", { replace = "posargs", default = ["."], extend = true }],
]

[tool.tox.env.lint]
package = "skip"
deps = [
    "ruff",
]
commands = [
    ["ruff", "check", "--no-fix", { replace = "posargs", default = ["."], extend = true }],
]

[tool.ruff]
line-length = 88
lint.extend-select = [
    "B", # flake8-bugbear
    "I", # isort
    "UP", # pyupgrade
]
extend-exclude = [
    "docs/source/**/*.ipynb",
]
